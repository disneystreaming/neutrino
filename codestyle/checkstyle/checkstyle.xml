<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="com.puppycrawl.tools.checkstyle.Checker">
    <property name="charset" value="UTF-8"/>

    <!-- Root Checks -->
    <module name="NewlineAtEndOfFileCheck">
        <property name="lineSeparator" value="lf"/>
    </module>

    <!-- File Length Check -->
    <module name="FileLength">
        <property name="max" value="5000"/>
    </module>

    <!-- Checks that there are no tab characters ('\t') in the source code. -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="LineLength">
        <property name="max" value="180"/>
    </module>

    <!-- TreeWalker Checks -->
    <module name="com.puppycrawl.tools.checkstyle.TreeWalker">
        <!-- Annotations -->
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact"/>
        </module>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>

        <!-- Block Checks -->
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
            <property name="commentFormat" value="This is expected"/>
        </module>
        <module name="LeftCurly"/>
        <module name="RightCurly"/>
        <module name="NeedBraces"/>
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>

        <!-- Class Design -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>

        <!-- Coding -->
        <module name="ArrayTrailingComma"/>
        <module name="CovariantEquals"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MultipleStringLiterals">
            <property name="allowedDuplicates" value="8"/>
        </module>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="PackageDeclaration"/>
        <module name="ParameterAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>
        <module name="VariableDeclarationUsageDistance">
            <property name="allowedDistance" value="4" />
        </module>
        <module name="MultipleVariableDeclarations"/>

        <!-- Imports -->
        <module name="AvoidStarImport">
            <property name="excludes" value="
            javax.servlet,org.mockito.Mockito.*,
            java.lang.annotation.ElementType.*,
            org.hamcrest.Matchers.*"/>
        </module>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="true"/>
        </module>
        <module name="ImportOrder">
            <property name="groups" value="*,/javax?/"/>
            <property name="ordered" value="false"/>
            <property name="separated" value="true"/>
            <property name="option" value="bottom"/>
        </module>

        <!-- Javadoc Comments removed-->

        <!-- Metrics -->
        <module name="CyclomaticComplexity">
            <property name="max" value="40"/>
        </module>

        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle"/>
        <module name="Indentation"/>
        <module name="OuterTypeFilename"/>
        <module name="TodoComment">
            <property name="format" value="TODO"/>
            <message key="todo.match"
                     value="Please complete TODO before committing code, or just remove TODO from code and fire a JIRA ticket instead."/>
        </module>
        <module name="UpperEll"/>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Naming Conventions -->
        <module name="AbstractClassName"/>
        <module name="CatchParameterName"/>
        <module name="ConstantName"/>
        <!--<module name="InterfaceTypeParameterName"/>-->
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName">
            <property name="allowOneCharVarInForLoop" value="true"/>
        </module>
        <module name="MemberName"/>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z].*$"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="ParameterName">
            <property name="ignoreOverridden" value="true"/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Regexp -->
        <module name="RegexpSinglelineJava">
            <property name="maximum" value="0"/>
            <property name="format" value="org\.mockito\.Mockito\.(when|doThrow|doAnswer)"/>
            <property name="message"
                      value="Please use BDDMockito imports."/>
            <property name="ignoreComments" value="true"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="maximum" value="0"/>
            <property name="format" value="org\.junit\.Assert\.assert"/>
            <property name="message" value="Please use AssertJ imports."/>
            <property name="ignoreComments" value="true"/>
        </module>
        <module name="Regexp">
            <property name="format" value="[ \t]+$"/>
            <property name="illegalPattern" value="true"/>
            <property name="message" value="Trailing whitespace"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.(out)|(err)\.print(ln)?\("/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Please use Logger instead of System.out/System.err to do print."/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="\.printStacktrace\(\)"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Please use Logger instead of e.printStacktrace() to do print."/>
        </module>

        <!-- Size Violations -->
        <module name="AnonInnerLength">
            <property name="max" value="60"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="60"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="ParameterNumber">
            <property name="ignoreOverriddenMethods" value="true"/>
            <property name="max" value="10"/>
        </module>

        <!-- Whitespace -->
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad">
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore">
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        <module name="SuppressionCommentFilter"/>
        <module name="SuppressWarningsHolder" />
    </module>
    <module name="SuppressWarningsFilter" />
</module>

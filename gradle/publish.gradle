apply plugin: "maven-publish"
apply plugin: 'signing'

java {
    withJavadocJar()
    withSourcesJar()
}

def pomConfig = {
    developers {
        developer {
            id 'russell.bie'
            name 'Russell Bie'
            email 'russell.bie@disneystreaming.com'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) { publication ->
            artifactId="${rootProject.name}-${project.name}_${scalaBinaryVersion}"
            version="${sparkMinorVersion}_${project.version}"
            from components.java
            pom.withXml {
                def root = asNode()
                project.configurations.provided.allDependencies.each { dep ->
                    root.dependencies.'*'.last() + {
                        delegate.dependency {
                            delegate.groupId dep.group
                            delegate.artifactId dep.name
                            delegate.version dep.version
                            delegate.scope 'provided'
                        }
                    }
                }
                root.appendNode('description', 'A dependency injection framework for apache spark')
                root.children().last() + pomConfig
            }
        }
    }
    repositories {
        maven {
            def repoUrl = project.hasProperty("repo-url") ? project.getProperty("repo-url") : "url"
            def user = project.hasProperty("username") ? project.getProperty("username") : "user"
            def pass = project.hasProperty("password") ? project.getProperty("password") : "pass"
            if (!project.hasProperty("username") || project.getProperty("username") == null || project.getProperty("username").length() <= 0) {
                println 'no publish username'
            } else {
                println 'has publish username'
            }
            
            if (!project.hasProperty("password") || project.getProperty("password") == null || project.getProperty("password").length() <= 0) {
                println 'no publish password'
            } else {
                println 'has publish password'
            }
            
            afterEvaluate {
                url = repoUrl
            }
            // fill in the empty strings with your CORP user name and password
            credentials {
                username user
                password pass
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

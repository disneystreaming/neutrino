buildscript {
    apply from: file('versions.gradle')
    dependencies {
        classpath "com.google.guava:guava:${guavaVersion}"
    }
}

plugins {
    id "com.github.spotbugs" version "5.0.6" apply false
    id "com.github.alisiikh.scalastyle" version "3.4.1" apply false
    id "com.github.johnrengelman.shadow" version "7.1.2" apply false
    id "io.freefair.lombok" version "6.4.1" apply false
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id "org.sonarqube" version "3.0"
    id 'org.scoverage' version "${scoveragePluginVersion}" apply false
    id 'idea'
}

apply from: file("$rootDir/gradle/sonarqube.gradle")

allprojects {
    apply from: file("$rootDir/gradle/repositories.gradle")
}

// the group of the root object has to set to this value,
// as the publish-plugin uses this value as the stagingProfile.
// and the root version is required to determine if the jar is published to snapshot or staging
group 'com.disneystreaming'
version neutrinoVersion

subprojects {
    ext {
        fastBuild = project.hasProperty('fast')
        scalaSource = new File("$projectDir/src/main/scala").exists()
        scalaTest = new File("$projectDir/src/test/scala").exists()
    }

    group 'com.disneystreaming'
    version neutrinoVersion

    apply from: file("$rootDir/gradle/java.gradle")
    apply from: file("$rootDir/gradle/checkstyle.gradle")
    apply from: file("$rootDir/gradle/test.gradle")

    apply from: file("$rootDir/gradle/scala.gradle")
    apply from: file("$rootDir/gradle/scalastyle.gradle")
    apply from: file("$rootDir/gradle/scalatest.gradle")

    apply from: file("$rootDir/gradle/codecoverage.gradle")
}

apply from: file("$rootDir/gradle/sonatypeRepo.gradle")
